There are two parts of this Unix-Shell project.
Part-1: Building the tpcds-gen-<version>.jar
Part-2: Generating the tpcds flat data, creating tpcds tables.

Part-1
YOU NEED RUN PART-1 IF YOU HAVE tpcds-gen-<version>.jar IN generator/target
Precondition: 
a). gcc, mvn, java, unzip installed and can be accessed.
b). Network access.

To create the generator of tpcds, Do:
1). change directory to generator and run build.sh
  $ cd generator; ./build.sh
You will get tpcds-gen-<version>.jar in sub-diretory target. Keep it stay there, It will be used in Part-2.

Part-2
Precondition: 
a). hadoop, hdfs installed and can be accessed.
b). hive installed and can be accessed.

To generate tpcds data and create tpcds tables stored as format such as flat tables, orc, parquet, Do
1). change directory to bin and check the variables in tpcds-env.sh
  $ cd bin; cat tpcds-env.sh
  Those variables you should take care:
    a) TPCDS_SCALE -> Mandatory, tpcds scale in GB.
    b) HIVE_SERVER -> Optional, IP or hostname of hive server when needed.
    c) TEXT_DB -> Optional, The flat database's name, tpcds_text_"$TPCDS_SCALE" by default.
    d) TBL_FORMAT -> Mandatory, Storage format of which kind tables you need.
    e) FORMAT_DB -> Optional, The none flat database's name, tpcds_$TBL_FORMAT_"$TPCDS_SCALE" by default.
    f) DELETE_MODE -> Mandatory, The flag whether or not delete the flat tables and related files in HDFS, true will delete and false not.
    g) LOCATION_HDFS -> Mandatory, HDFS directory for falt files.
    h) CMD -> Mandatory, hive exec command
  Please check and confirm, modify some of them if needed.

2) run gen-data.sh
  $ ./gen-data.sh
  There are some options that will overwrite the variables in tpcds-env.sh, It is highly recommended DO NOT do this.
  -s | --scale, scale(in GB).
  -l | --location, HDFS directory for falt files.
  -h | --help, Show this help message.
  This script will help you generating flat data and putting them into HDFS.

3) run create-text-table.sh
  $ ./create-text-table.sh
  There are some options that will overwrite the variables in tpcds-env.sh, It is highly recommended DO NOT do this.
  -l | --location, HDFS directory of files generated by gen-data.sh.
  -t | --textdb, The flat database's name.
  -c | -- command, Execute command 
  -h | --help, show this help text.
  This script will help you create flat tables against the data generated by gen-data.sh.

4) run create-none-text-table.sh
  $ ./create-none-text-table.sh
  There are some options that will overwrite the variables in tpcds-env.sh, It is highly recommended DO NOT do this. 
  -s | --sourcedb, Source database, it is the flat database's name.
  -t | --targetdb, Target database, it is the none flat database's name.
  -f | --format, Storage format of which kind tables you need
  -d | --delete, DELETE_MODE, true or false
  -l | --location, LOCATION_HDFS of flat file, can not be empty when DELETE_MODE is true
  -c | --command, query exec command, hive by default
  --help), Show this help message.
  This script will help you create none-flat tables based the flat tables created by create-text-table.sh. Flat tables and related files will be remove if DELETE_MODE is true.

It is Integrated in all-in-one.sh to DO everything, including gen-data, create-text-file, create-none-text-file.

It is highly recommended that check and modify the tpcds-env.sh, DO NOT overwrite the variables by optional arguments.
